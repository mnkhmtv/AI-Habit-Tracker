import streamlit as st
import sys
import os
import pandas as pd
from datetime import datetime

# Add parent directory to path to import from backend
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from backend.database import get_user_by_id, get_user_habits, add_user_habit, get_user_data
from backend.utils import format_time_string, validate_time_format, get_improvement_areas_options, get_time_commitment_options, get_preferred_time_options

def render_recommendations():
    """Render the recommendations page with habit suggestions."""
    st.title("üîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–≤—ã—á–∫–∞–º")
    
    # Check if user is logged in
    if 'user_id' not in st.session_state:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º.")
        return
    
    # Get user information
    user_id = st.session_state.user_id
    user_data = get_user_data(user_id)
    
    # Welcome message
    st.write(f"–ü—Ä–∏–≤–µ—Ç, {st.session_state.username}! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–≤—ã—á–∫–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –¥–æ—Å—Ç–∏—á—å –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π.")
    
    # Create tabs
    tab1, tab2 = st.tabs(["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"])
    
    with tab1:
        # Display recommended habits
        st.subheader("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏")
        
        # Get current user habits
        current_habits = get_user_habits(user_id)
        current_habit_names = [h['name'] for h in current_habits] if current_habits else []
        
        # Create a list of sample recommended habits
        # In a real app, these would come from a recommendation engine
        recommended_habits = [
            {
                "name": "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞",
                "category": "–§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
                "description": "–ù–∞—á–Ω–∏—Ç–µ –¥–µ–Ω—å —Å 5-–º–∏–Ω—É—Ç–Ω–æ–π –∑–∞—Ä—è–¥–∫–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è.",
                "difficulty": "–õ–µ–≥–∫–æ",
                "time_required": "5 –º–∏–Ω—É—Ç",
                "benefits": "–ü–æ–≤—ã—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏, —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≥–∏–±–∫–æ—Å—Ç–∏"
            },
            {
                "name": "–ú–µ–¥–∏—Ç–∞—Ü–∏—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏",
                "category": "–ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
                "description": "–£–¥–µ–ª–∏—Ç–µ 10 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å —Ç–∏—Ö–æ–π –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏.",
                "difficulty": "–°—Ä–µ–¥–Ω–µ",
                "time_required": "10-15 –º–∏–Ω—É—Ç",
                "benefits": "–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞, —É–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"
            },
            {
                "name": "–ü–∏—Ç—å–µ–≤–æ–π —Ä–µ–∂–∏–º",
                "category": "–§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
                "description": "–í—ã–ø–∏–≤–∞–π—Ç–µ —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏.",
                "difficulty": "–õ–µ–≥–∫–æ",
                "time_required": "5 –º–∏–Ω—É—Ç",
                "benefits": "–ì–∏–¥—Ä–∞—Ç–∞—Ü–∏—è, —É–ª—É—á—à–µ–Ω–∏–µ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞, –∑–¥–æ—Ä–æ–≤–∞—è –∫–æ–∂–∞"
            },
            {
                "name": "–ß—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º",
                "category": "–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ",
                "description": "–ß–∏—Ç–∞–π—Ç–µ –∫–Ω–∏–≥—É –ø–µ—Ä–µ–¥ —Å–Ω–æ–º –≤–º–µ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.",
                "difficulty": "–°—Ä–µ–¥–Ω–µ",
                "time_required": "15-30 –º–∏–Ω—É—Ç",
                "benefits": "–£–ª—É—á—à–µ–Ω–∏–µ —Å–Ω–∞, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫—Ä—É–≥–æ–∑–æ—Ä–∞, —Å–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞"
            },
            {
                "name": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è",
                "category": "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                "description": "–ù–∞—á–Ω–∏—Ç–µ –¥–µ–Ω—å —Å —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.",
                "difficulty": "–õ–µ–≥–∫–æ",
                "time_required": "5 –º–∏–Ω—É—Ç",
                "benefits": "–ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Å–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞, –ª—É—á—à–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"
            },
            {
                "name": "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å",
                "category": "–ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
                "description": "–ó–∞–ø–∏—à–∏—Ç–µ —Ç—Ä–∏ –≤–µ—â–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.",
                "difficulty": "–õ–µ–≥–∫–æ",
                "time_required": "5 –º–∏–Ω—É—Ç",
                "benefits": "–ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, —Å–Ω–∏–∂–µ–Ω–∏–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏"
            }
        ]
        
        # Filter out habits that user already has
        filtered_recommendations = [h for h in recommended_habits if h["name"] not in current_habit_names]
        
        if not filtered_recommendations:
            st.info("–£ –Ω–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.")
        else:
            for i, habit in enumerate(filtered_recommendations):
                with st.expander(f"{habit['name']} - {habit['category']}"):
                    col1, col2 = st.columns([3, 1])
                    
                    with col1:
                        st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {habit['description']}")
                        st.markdown(f"**–°–ª–æ–∂–Ω–æ—Å—Ç—å:** {habit['difficulty']}")
                        st.markdown(f"**–¢—Ä–µ–±—É–µ–º–æ–µ –≤—Ä–µ–º—è:** {habit['time_required']}")
                        st.markdown(f"**–ü–æ–ª—å–∑–∞:** {habit['benefits']}")
                    
                    with col2:
                        # Add habit button
                        if st.button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É", key=f"add_habit_{i}"):
                            # Default time selection
                            if habit['category'] == "–§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ":
                                default_time = "08:00"
                            elif habit['category'] == "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
                                default_time = "09:00"
                            elif habit['category'] == "–ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ":
                                default_time = "19:00"
                            else:
                                default_time = "20:00"
                            
                            # Add habit to user's list
                            add_user_habit(
                                user_id=user_id,
                                name=habit['name'],
                                description=habit['description'],
                                category=habit['category'],
                                time_required=habit['time_required'],
                                difficulty=habit['difficulty'],
                                selected_time=default_time
                            )
                            
                            st.success(f"–ü—Ä–∏–≤—ã—á–∫–∞ '{habit['name']}' –¥–æ–±–∞–≤–ª–µ–Ω–∞! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¢—Ä–µ–∫–µ—Ä, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ.")
                            st.rerun()
    
    with tab2:
        # Preference settings form to customize recommendations
        st.subheader("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è")
        st.write("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.")
        
        with st.form("preference_form"):
            # Areas to improve
            improvement_areas = st.multiselect(
                "–ö–∞–∫–∏–µ –æ–±–ª–∞—Å—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å?",
                options=get_improvement_areas_options(),
                default=["–§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ"]
            )
            
            # Time commitment
            time_commitment = st.select_slider(
                "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Å–≤—è—â–∞—Ç—å –Ω–æ–≤—ã–º –ø—Ä–∏–≤—ã—á–∫–∞–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ?",
                options=get_time_commitment_options()
            )
            
            # Preferred time
            preferred_time = st.multiselect(
                "–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –¥–Ω—è –≤–∞–º —É–¥–æ–±–Ω–µ–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–∏–≤—ã—á–∫–∏?",
                options=get_preferred_time_options(),
                default=["–£—Ç—Ä–æ"]
            )
            
            # Difficulty level
            difficulty_level = st.slider(
                "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (1 - –ª–µ–≥–∫–æ, 5 - —Å–ª–æ–∂–Ω–æ)",
                1, 5, 3
            )
            
            # Submit button
            submitted = st.form_submit_button("–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è")
            
            if submitted:
                # In a real app, save these preferences to user's profile
                st.success("–í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...")
                st.rerun()
    
    # Display educational content
    st.subheader("–ö–∞–∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏")
    
    st.write("""
    ### –ù–∞—É—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–∏–≤—ã—á–µ–∫:
    
    1. **–ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–∞–ª–æ–≥–æ** - –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Å –Ω–µ–±–æ–ª—å—à–∏—Ö, –ª–µ–≥–∫–æ –≤—ã–ø–æ–ª–Ω–∏–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å—ã –Ω–∞ —É—Å–ø–µ—Ö.
    
    2. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã** - –ü—Ä–∏–≤—è–∂–∏—Ç–µ –Ω–æ–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä—É—Ç–∏–Ω–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: "–ü–æ—Å–ª–µ —á–∏—Å—Ç–∫–∏ –∑—É–±–æ–≤ —è –±—É–¥—É –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å 2 –º–∏–Ω—É—Ç—ã".
    
    3. **–°–æ–∑–¥–∞–π—Ç–µ —Ü–µ–ø–æ—á–∫—É —É—Å–ø–µ—Ö–∞** - –û—Ç–º–µ—á–∞–π—Ç–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, —á—Ç–æ–±—ã –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.
    
    4. **–û–∂–∏–¥–∞–π—Ç–µ –Ω–µ—É–¥–∞—á** - –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ª—é–¥–µ–π –ø—Ä–æ–ø—É—Å–∫–∞—é—Ç –¥–µ–Ω—å –∏–ª–∏ –¥–≤–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏. –í–∞–∂–Ω–æ –Ω–µ –±—Ä–æ—Å–∞—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –Ω–µ—É–¥–∞—á–∏.
    
    5. **–°–∏—Å—Ç–µ–º–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π** - –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞–π—Ç–µ —Å–µ–±—è –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ä—É–±–µ–∂–µ–π, —á—Ç–æ–±—ã —É–∫—Ä–µ–ø–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é.
    """)
    
    # Statistical insights
    st.write("### –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö:")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.metric("–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏", "66 –¥–Ω–µ–π", "21-254 –¥–Ω–µ–π")
        st.write("–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –§–∏–ª–∏–ø–ø—ã –õ—ç–ª–ª–∏ –ø–æ–∫–∞–∑–∞–ª–æ, —á—Ç–æ –≤ —Å—Ä–µ–¥–Ω–µ–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 66 –¥–Ω–µ–π –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏, —Å —Ä–∞–∑–±—Ä–æ—Å–æ–º –æ—Ç 21 –¥–æ 254 –¥–Ω–µ–π.")
    
    with col2:
        st.metric("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ —Å —Ç—Ä–µ–∫–µ—Ä–æ–º –ø—Ä–∏–≤—ã—á–µ–∫", "80%", "+42%")
        st.write("–õ—é–¥–∏, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—â–∏–µ —Å–≤–æ–∏ –ø—Ä–∏–≤—ã—á–∫–∏, –∏–º–µ—é—Ç –Ω–∞ 42% –±–æ–ª—å—à–µ —à–∞–Ω—Å–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ.")

def render_custom_habit_form(user_id, existing_habit_names):
    """Render form to add custom habits."""
    st.subheader("üìù –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø—Ä–∏–≤—ã—á–∫—É")
    st.write("–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—É—é –ø—Ä–∏–≤—ã—á–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏—Ç—å:")
    
    with st.form("custom_habit_form"):
        # Form inputs
        habit_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏", max_chars=50)
        habit_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ (—Ü–µ–ª—å –∏ –ø–æ–ª—å–∑–∞)", max_chars=200)
        habit_category = st.selectbox(
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
            options=["–ó–¥–æ—Ä–æ–≤—å–µ", "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ", "–§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ", "–ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ"]
        )
        habit_time_required = st.selectbox(
            "–¢—Ä–µ–±—É–µ–º–æ–µ –≤—Ä–µ–º—è",
            options=["5 –º–∏–Ω—É—Ç", "10-15 –º–∏–Ω—É—Ç", "15-30 –º–∏–Ω—É—Ç", "30-60 –º–∏–Ω—É—Ç"]
        )
        habit_difficulty = st.selectbox(
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≤—ã—á–∫–∏",
            options=["–õ–µ–≥–∫–æ", "–°—Ä–µ–¥–Ω–µ", "–°–ª–æ–∂–Ω–æ"]
        )
        habit_selected_time = st.time_input("–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", value=datetime.strptime("08:00", "%H:%M").time())
        
        # Submit button
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É")
        
        if submitted:
            if not habit_name:
                st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏.")
            elif habit_name.lower() in existing_habit_names:
                st.error(f"–ü—Ä–∏–≤—ã—á–∫–∞ '{habit_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            else:
                # Add the habit to the database
                add_user_habit(
                    user_id=user_id,
                    name=habit_name,
                    description=habit_description,
                    category=habit_category,
                    time_required=habit_time_required,
                    difficulty=habit_difficulty,
                    selected_time=habit_selected_time.strftime("%H:%M")
                )
                st.success(f"–ü—Ä–∏–≤—ã—á–∫–∞ '{habit_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                st.rerun()

def render_ai_recommendations(user_id, existing_habit_names):
    """Render AI-based habit recommendations."""
    st.subheader("ü§ñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –ò–ò")
    st.write("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –ø—Ä–∏–≤—ã—á–∫–∞–º:")
    
    # Category selector
    categories = [
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...",
        "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Ñ–∏—Ç–Ω–µ—Å",
        "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
        "–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç",
        "–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ",
        "–ü—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
        "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"
    ]
    
    selected_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–∏–≤—ã—á–µ–∫", options=categories)
    
    if selected_category == "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...":
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.")
        return
    
    # Sample recommendations based on selected category
    recommendations = []
    if selected_category == "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Ñ–∏—Ç–Ω–µ—Å":
        recommendations = [
            {"id": 1, "name": "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "description": "10 –º–∏–Ω—É—Ç –∑–∞—Ä—è–¥–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è", "frequency": "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "difficulty": "–°—Ä–µ–¥–Ω–µ"},
            {"id": 2, "name": "–ü—Ä–æ–≥—É–ª–∫–∞", "description": "30-–º–∏–Ω—É—Ç–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ", "frequency": "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "difficulty": "–õ–µ–≥–∫–æ"}
        ]
    elif selected_category == "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
        recommendations = [
            {"id": 3, "name": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è", "description": "5 –º–∏–Ω—É—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á —É—Ç—Ä–æ–º", "frequency": "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "difficulty": "–õ–µ–≥–∫–æ"},
            {"id": 4, "name": "–ú–µ—Ç–æ–¥ –ü–æ–º–æ–¥–æ—Ä–æ", "description": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ü–æ–º–æ–¥–æ—Ä–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã", "frequency": "–í —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏", "difficulty": "–°—Ä–µ–¥–Ω–µ"}
        ]
    
    # Filter out habits that user already has
    new_recommendations = [r for r in recommendations 
                          if r['name'].lower() not in existing_habit_names]
    
    if not new_recommendations:
        st.info("–í—ã —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç–µ –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
        return
    
    # Display recommendations
    st.write(f"### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è: {selected_category}")
    
    # Create columns for displaying habits
    cols = st.columns(2)
    
    for i, habit in enumerate(new_recommendations):
        with cols[i % 2]:
            with st.container():
                st.subheader(habit['name'])
                st.write(habit['description'])
                
                # Display metadata
                col1, col2 = st.columns(2)
                with col1:
                    st.caption(f"–ß–∞—Å—Ç–æ—Ç–∞: {habit['frequency']}")
                with col2:
                    st.caption(f"–°–ª–æ–∂–Ω–æ—Å—Ç—å: {habit['difficulty']}")
                
                # Add button
                if st.button("–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–∏ –ø—Ä–∏–≤—ã—á–∫–∏", key=f"add_{habit['id']}"):
                    # Set default time based on habit
                    default_time = "08:00"  # morning default
                    if "–≤–µ—á–µ—Ä" in habit['description'].lower():
                        default_time = "19:00"
                    elif "–æ–±–µ–¥" in habit['description'].lower():
                        default_time = "13:00"
                        
                    add_user_habit(
                        user_id=user_id,
                        name=habit['name'],
                        description=habit['description'],
                        category=selected_category,
                        time_required="15 –º–∏–Ω—É—Ç",
                        difficulty=habit['difficulty'],
                        selected_time=default_time
                    )
                    st.success(f"–ü—Ä–∏–≤—ã—á–∫–∞ '{habit['name']}' –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                    st.rerun()

def render_recommendations_view():
    """Render the recommendations view with habit suggestions and personalized recommendations."""
    st.title("üîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏–≤—ã—á–µ–∫")
    
    if 'user_id' not in st.session_state:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º")
        st.session_state.current_page = "login"
        st.rerun()
    
    # Get user info
    user = get_user_by_id(st.session_state.user_id)
    
    if not user:
        st.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    st.write(f"–ü—Ä–∏–≤–µ—Ç, {user['username']}! –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è –≤–∞—Å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏.")
    
    # Show success message if habit was added
    if 'habit_added' in st.session_state and st.session_state.habit_added:
        st.success("–ü—Ä–∏–≤—ã—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –µ—ë –Ω–∞ —Å–≤–æ–µ–π –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
        st.session_state.habit_added = False
    
    # Create a list of common habits in different categories
    habits_data = {
        "–ó–¥–æ—Ä–æ–≤—å–µ": [
            {"name": "–í—ã–ø–∏–≤–∞—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã", "description": "–í—ã–ø–∏–≤–∞—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è", "difficulty": "–õ–µ–≥–∫–æ"},
            {"name": "–ó–∞—Ä—è–¥–∫–∞", "description": "10 –º–∏–Ω—É—Ç —É—Ç—Ä–µ–Ω–Ω–µ–π –∑–∞—Ä—è–¥–∫–∏", "difficulty": "–°—Ä–µ–¥–Ω–µ"},
            {"name": "–ú–µ–¥–∏—Ç–∞—Ü–∏—è", "description": "5 –º–∏–Ω—É—Ç –º–µ–¥–∏—Ç–∞—Ü–∏–∏ —É—Ç—Ä–æ–º –∏–ª–∏ –≤–µ—á–µ—Ä–æ–º", "difficulty": "–õ–µ–≥–∫–æ"},
            {"name": "–ü—Ä–æ–≥—É–ª–∫–∞", "description": "20-30 –º–∏–Ω—É—Ç —Ö–æ–¥—å–±—ã –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ", "difficulty": "–°—Ä–µ–¥–Ω–µ"},
            {"name": "–ó–¥–æ—Ä–æ–≤—ã–π –ø–µ—Ä–µ–∫—É—Å", "description": "–ó–∞–º–µ–Ω–∏—Ç—å –æ–¥–∏–Ω –Ω–µ–∑–¥–æ—Ä–æ–≤—ã–π –ø–µ—Ä–µ–∫—É—Å –Ω–∞ —Ñ—Ä—É–∫—Ç –∏–ª–∏ –æ—Ä–µ—Ö–∏", "difficulty": "–°—Ä–µ–¥–Ω–µ"}
        ],
        "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": [
            {"name": "–ì–ª—É–±–æ–∫–∞—è —Ä–∞–±–æ—Ç–∞", "description": "30 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã –±–µ–∑ –æ—Ç–≤–ª–µ—á–µ–Ω–∏–π", "difficulty": "–°–ª–æ–∂–Ω–æ"},
            {"name": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è", "description": "5 –º–∏–Ω—É—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á –Ω–∞ –¥–µ–Ω—å", "difficulty": "–õ–µ–≥–∫–æ"},
            {"name": "–ß—Ç–µ–Ω–∏–µ", "description": "–ß–∏—Ç–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–Ω–∏–≥–∏", "difficulty": "–°—Ä–µ–¥–Ω–µ"},
            {"name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ email", "description": "–ü—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ—á—Ç—É —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è", "difficulty": "–°—Ä–µ–¥–Ω–µ"},
            {"name": "–¢–∞–π–º–µ—Ä –ü–æ–º–æ–¥–æ—Ä–æ", "description": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É –ü–æ–º–æ–¥–æ—Ä–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã", "difficulty": "–°—Ä–µ–¥–Ω–µ"}
        ],
        "–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç": [
            {"name": "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å", "description": "–ó–∞–ø–∏—Å–∞—Ç—å 3 –≤–µ—â–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã", "difficulty": "–õ–µ–≥–∫–æ"},
            {"name": "–ù–æ–≤—ã–π –Ω–∞–≤—ã–∫", "description": "–£–¥–µ–ª–∏—Ç—å 15 –º–∏–Ω—É—Ç –∏–∑—É—á–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ –Ω–∞–≤—ã–∫–∞", "difficulty": "–°—Ä–µ–¥–Ω–µ"},
            {"name": "–†–µ—Ñ–ª–µ–∫—Å–∏—è", "description": "–£–¥–µ–ª–∏—Ç—å 5 –º–∏–Ω—É—Ç —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è–º –æ –ø—Ä–æ—à–µ–¥—à–µ–º –¥–Ω–µ", "difficulty": "–õ–µ–≥–∫–æ"},
            {"name": "–¶–µ–ª–∏", "description": "–ù–∞–ø–æ–º–∏–Ω–∞—Ç—å —Å–µ–±–µ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö", "difficulty": "–õ–µ–≥–∫–æ"},
            {"name": "–û–±—â–µ–Ω–∏–µ", "description": "–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –¥—Ä—É–≥–æ–º –∏–ª–∏ –±–ª–∏–∑–∫–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º", "difficulty": "–°—Ä–µ–¥–Ω–µ"}
        ]
    }
    
    st.subheader("üìã –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
    
    # Create tabs for different habit categories
    tabs = st.tabs(list(habits_data.keys()))
    
    # For each category tab
    for i, (category, habits) in enumerate(habits_data.items()):
        with tabs[i]:
            st.write(f"–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}':")
            
            # Display each habit in the category
            for j, habit in enumerate(habits):
                with st.container():
                    col1, col2 = st.columns([3, 1])
                    
                    with col1:
                        st.subheader(habit["name"])
                        st.write(habit["description"])
                        st.write(f"**–°–ª–æ–∂–Ω–æ—Å—Ç—å:** {habit['difficulty']}")
                    
                    with col2:
                        # Add habit button
                        if st.button("–î–æ–±–∞–≤–∏—Ç—å", key=f"add_{category}_{j}"):
                            # Determine appropriate time based on habit name and description
                            default_time = "08:00"  # Default morning time
                            if "–≤–µ—á–µ—Ä" in habit["description"].lower() or "—Å–æ–Ω" in habit["description"].lower():
                                default_time = "20:00"
                            elif "–æ–±–µ–¥" in habit["description"].lower():
                                default_time = "13:00"
                            
                            # Determine appropriate time required
                            time_required = "5 –º–∏–Ω—É—Ç"
                            if "10 –º–∏–Ω—É—Ç" in habit["description"]:
                                time_required = "10-15 –º–∏–Ω—É—Ç"
                            elif "15 –º–∏–Ω—É—Ç" in habit["description"] or "20 –º–∏–Ω—É—Ç" in habit["description"]:
                                time_required = "15-30 –º–∏–Ω—É—Ç"
                            elif "30 –º–∏–Ω—É—Ç" in habit["description"]:
                                time_required = "30-60 –º–∏–Ω—É—Ç"
                            
                            # Add habit to database
                            add_user_habit(
                                user_id=st.session_state.user_id,
                                name=habit["name"],
                                description=habit["description"],
                                category=category,
                                time_required=time_required,
                                difficulty=habit["difficulty"],
                                selected_time=default_time
                            )
                            
                            # Set success message flag
                            st.session_state.habit_added = True
                            st.rerun()
    
    # Custom habit section
    st.markdown("---")
    st.subheader("üåü –°–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –ø—Ä–∏–≤—ã—á–∫—É")
    
    with st.form("custom_habit_form"):
        habit_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏")
        habit_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏")
        habit_category = st.selectbox(
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
            options=["–ó–¥–æ—Ä–æ–≤—å–µ", "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç", "–î—Ä—É–≥–æ–µ"]
        )
        habit_time_required = st.selectbox(
            "–¢—Ä–µ–±—É–µ–º–æ–µ –≤—Ä–µ–º—è",
            options=["5 –º–∏–Ω—É—Ç", "10-15 –º–∏–Ω—É—Ç", "15-30 –º–∏–Ω—É—Ç", "30-60 –º–∏–Ω—É—Ç"]
        )
        habit_difficulty = st.selectbox(
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å",
            options=["–õ–µ–≥–∫–æ", "–°—Ä–µ–¥–Ω–µ", "–°–ª–æ–∂–Ω–æ"]
        )
        habit_selected_time = st.time_input("–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è", value=datetime.strptime("08:00", "%H:%M").time())
        
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É")
        
        if submitted:
            if not habit_name or not habit_description:
                st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
            else:
                # Add custom habit to database
                add_user_habit(
                    user_id=st.session_state.user_id,
                    name=habit_name,
                    description=habit_description,
                    category=habit_category,
                    time_required=habit_time_required,
                    difficulty=habit_difficulty,
                    selected_time=habit_selected_time.strftime("%H:%M")
                )
                
                # Set success message flag
                st.session_state.habit_added = True
                st.rerun()
    
    # Tips section
    st.markdown("---")
    st.subheader("üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–∏–≤—ã—á–µ–∫")
    
    with st.expander("–ö–∞–∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–æ–π—á–∏–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏"):
        st.markdown("""
        1. **–ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–∞–ª–æ–≥–æ** ‚Äî –í—ã–±–∏—Ä–∞–π—Ç–µ –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –º–µ–Ω–µ–µ 2 –º–∏–Ω—É—Ç –≤ –Ω–∞—á–∞–ª–µ.
        2. **–ü—Ä–∏–≤—è–∑—ã–≤–∞–π—Ç–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø—Ä–∏–≤—ã—á–∫–∞–º** ‚Äî –î–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ—Å–ª–µ —É–∂–µ —É—Å—Ç–æ—è–≤—à–∏—Ö—Å—è –¥–µ–π—Å—Ç–≤–∏–π.
        3. **–î–µ–ª–∞–π—Ç–µ –∏—Ö –æ—á–µ–≤–∏–¥–Ω—ã–º–∏** ‚Äî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–ª–∏ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –Ω—É–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –≤–∏–¥–Ω–æ–º –º–µ—Å—Ç–µ.
        4. **–î–µ–ª–∞–π—Ç–µ –∏—Ö –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏** ‚Äî –°–æ–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö —Å —á–µ–º-—Ç–æ –ø—Ä–∏—è—Ç–Ω—ã–º.
        5. **–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å** ‚Äî –í–∏–∑—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.
        6. **–ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –¥–≤–∞ –¥–Ω—è –ø–æ–¥—Ä—è–¥** ‚Äî –û–¥–∏–Ω –ø—Ä–æ–ø—É—Å–∫ –Ω–µ —Å—Ç—Ä–∞—à–µ–Ω, –¥–≤–∞ —Å–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω.
        7. **–ë—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã** ‚Äî –ù–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–æ–π—á–∏–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ –º–æ–∂–µ—Ç —É–π—Ç–∏ –æ—Ç 21 –¥–æ 66 –¥–Ω–µ–π.
        """)
    
    with st.expander("–ö–∞–∫ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è"):
        st.markdown("""
        1. **–ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è** ‚Äî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª–æ 2-—Ö –º–∏–Ω—É—Ç: –Ω–∞—á–Ω–∏—Ç–µ –¥–µ–ª–∞—Ç—å —Ö–æ—Ç—è –±—ã 2 –º–∏–Ω—É—Ç—ã.
        2. **–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏** ‚Äî –°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É, –Ω–µ –ø–æ–ª–∞–≥–∞–π—Ç–µ—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—é.
        3. **–ó–∞–±—ã–≤—á–∏–≤–æ—Å—Ç—å** ‚Äî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ.
        4. **–°–ª–æ–∂–Ω–æ—Å—Ç—å** ‚Äî –£–ø—Ä–æ—Å—Ç–∏—Ç–µ –ø—Ä–∏–≤—ã—á–∫—É —Ç–∞–∫, —á—Ç–æ–±—ã –µ—ë –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
        5. **–°–∫—É–∫–∞** ‚Äî –í–∞—Ä—å–∏—Ä—É–π—Ç–µ —Å–ø–æ—Å–æ–±—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏, –¥–µ–ª–∞–π—Ç–µ –µ—ë –∏–≥—Ä–æ–π.
        6. **–°—Ç—Ä–µ—Å—Å** ‚Äî –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –∑–∞–º–µ—Ç–∏—Ç—å, –∫–æ–≥–¥–∞ —Å—Ç—Ä–µ—Å—Å –º–µ—à–∞–µ—Ç –≤–∞—à–∏–º –ø—Ä–∏–≤—ã—á–∫–∞–º.
        7. **–°—Ä—ã–≤—ã** ‚Äî –ó–∞—Ä–∞–Ω–µ–µ –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ, –∫–∞–∫ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–∏–≤—ã—á–∫–µ –ø–æ—Å–ª–µ —Å—Ä—ã–≤–∞.
        """)
    
    # Personalized suggestions based on user data (placeholder for ML model integration)
    st.markdown("---")
    st.subheader("ü§ñ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    
    # This would be connected to the ML model in a future update
    st.info("–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞—à–∏—Ö –ø—Ä–∏–≤—ã—á–∫–∞—Ö. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–∏–≤—ã—á–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!") 